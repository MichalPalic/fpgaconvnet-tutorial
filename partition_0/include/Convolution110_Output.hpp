#ifndef CONVOLUTION110_OUTPUT_HPP_
#define CONVOLUTION110_OUTPUT_HPP_

#include "sliding_window.hpp"
#include "fork.hpp"
#include "conv.hpp"
#include "accum.hpp"
#include "glue.hpp"
#include "bias.hpp"

#define name        Convolution110_Output
#define NAME        CONVOLUTION110_OUTPUT
#define CONVOLUTION110_OUTPUT_ID   0

// parameters
#define CONVOLUTION110_OUTPUT_BATCH_SIZE    1
#define CONVOLUTION110_OUTPUT_ROWS          14
#define CONVOLUTION110_OUTPUT_COLS          14
#define CONVOLUTION110_OUTPUT_CHANNELS      8
#define CONVOLUTION110_OUTPUT_FILTERS       16
#define CONVOLUTION110_OUTPUT_GROUPS        1
#define CONVOLUTION110_OUTPUT_COARSE_IN     1
#define CONVOLUTION110_OUTPUT_COARSE_OUT    4
#define CONVOLUTION110_OUTPUT_COARSE_GROUP  1
#define CONVOLUTION110_OUTPUT_KERNEL_SIZE_X 5
#define CONVOLUTION110_OUTPUT_KERNEL_SIZE_Y 5
#define CONVOLUTION110_OUTPUT_FINE          25
#define CONVOLUTION110_OUTPUT_STRIDE_X      1
#define CONVOLUTION110_OUTPUT_STRIDE_Y      1

#define CONVOLUTION110_OUTPUT_HAS_BIAS 1

// coefficients
#define CONVOLUTION110_OUTPUT_WEIGHTS CONVOLUTION110_OUTPUT_FILTERS*DIVIDE(CONVOLUTION110_OUTPUT_CHANNELS,CONVOLUTION110_OUTPUT_GROUPS)*CONVOLUTION110_OUTPUT_KERNEL_SIZE_X*CONVOLUTION110_OUTPUT_KERNEL_SIZE_Y

// dimensions out
#define CONVOLUTION110_OUTPUT_ROWS_OUT     10
#define CONVOLUTION110_OUTPUT_COLS_OUT     10
#define CONVOLUTION110_OUTPUT_CHANNELS_OUT 16

// define data types
typedef ap_fixed<16,8,AP_RND>    Convolution110_Output_input_t;
typedef ap_fixed<16,8,AP_RND>  Convolution110_Output_output_t;
typedef ap_fixed<16,8,AP_RND>        Convolution110_Output_acc_t;
typedef ap_fixed<16,8,AP_RND>  Convolution110_Output_weight_t;
typedef ap_fixed<16,8,AP_RND>  Convolution110_Output_biases_t;

// SLIDING WINDOW
#define CONVOLUTION110_OUTPUT_SLIDING_WINDOW_BATCH_SIZE    1
#define CONVOLUTION110_OUTPUT_SLIDING_WINDOW_ROWS          14
#define CONVOLUTION110_OUTPUT_SLIDING_WINDOW_COLS          14
#define CONVOLUTION110_OUTPUT_SLIDING_WINDOW_CHANNELS      8
#define CONVOLUTION110_OUTPUT_SLIDING_WINDOW_KERNEL_SIZE_X 5
#define CONVOLUTION110_OUTPUT_SLIDING_WINDOW_KERNEL_SIZE_Y 5
#define CONVOLUTION110_OUTPUT_SLIDING_WINDOW_STRIDE_X      1
#define CONVOLUTION110_OUTPUT_SLIDING_WINDOW_STRIDE_Y      1
#define CONVOLUTION110_OUTPUT_SLIDING_WINDOW_PAD_LEFT      0
#define CONVOLUTION110_OUTPUT_SLIDING_WINDOW_PAD_RIGHT     0
#define CONVOLUTION110_OUTPUT_SLIDING_WINDOW_PAD_TOP       0
#define CONVOLUTION110_OUTPUT_SLIDING_WINDOW_PAD_BOTTOM    0

// FORK
#define CONVOLUTION110_OUTPUT_FORK_BATCH_SIZE    1
#define CONVOLUTION110_OUTPUT_FORK_ROWS          10
#define CONVOLUTION110_OUTPUT_FORK_COLS          10
#define CONVOLUTION110_OUTPUT_FORK_CHANNELS      8
#define CONVOLUTION110_OUTPUT_FORK_COARSE        4
#define CONVOLUTION110_OUTPUT_FORK_KERNEL_SIZE_X 5
#define CONVOLUTION110_OUTPUT_FORK_KERNEL_SIZE_Y 5

// CONV
#define CONVOLUTION110_OUTPUT_CONV_BATCH_SIZE          1
#define CONVOLUTION110_OUTPUT_CONV_ROWS                10
#define CONVOLUTION110_OUTPUT_CONV_COLS                10
#define CONVOLUTION110_OUTPUT_CONV_GROUPS              1
#define CONVOLUTION110_OUTPUT_CONV_CHANNELS            8
#define CONVOLUTION110_OUTPUT_CONV_FILTERS             4
#define CONVOLUTION110_OUTPUT_CONV_CHANNELS_PER_GROUP  8
#define CONVOLUTION110_OUTPUT_CONV_FILTERS_PER_GROUP   4
#define CONVOLUTION110_OUTPUT_CONV_KERNEL_SIZE_X       5
#define CONVOLUTION110_OUTPUT_CONV_KERNEL_SIZE_Y       5
#define CONVOLUTION110_OUTPUT_CONV_FINE                25
#define CONVOLUTION110_OUTPUT_CONV_INTERVAL            1

// ACCUM
#define CONVOLUTION110_OUTPUT_ACCUM_BATCH_SIZE         1
#define CONVOLUTION110_OUTPUT_ACCUM_ROWS               10
#define CONVOLUTION110_OUTPUT_ACCUM_COLS               10
#define CONVOLUTION110_OUTPUT_ACCUM_GROUPS             1
#define CONVOLUTION110_OUTPUT_ACCUM_CHANNELS           8
#define CONVOLUTION110_OUTPUT_ACCUM_FILTERS            4
#define CONVOLUTION110_OUTPUT_ACCUM_CHANNELS_PER_GROUP  8
#define CONVOLUTION110_OUTPUT_ACCUM_FILTERS_PER_GROUP   4

// GLUE
#define CONVOLUTION110_OUTPUT_GLUE_BATCH_SIZE   1
#define CONVOLUTION110_OUTPUT_GLUE_ROWS         10
#define CONVOLUTION110_OUTPUT_GLUE_COLS         10
#define CONVOLUTION110_OUTPUT_GLUE_FILTERS      16
#define CONVOLUTION110_OUTPUT_GLUE_FILTERS_PER_COARSE  4
#define CONVOLUTION110_OUTPUT_GLUE_COARSE_IN    1
#define CONVOLUTION110_OUTPUT_GLUE_COARSE_OUT   4
#define CONVOLUTION110_OUTPUT_GLUE_COARSE_GROUP 1

// BIAS
#define CONVOLUTION110_OUTPUT_BIAS_BATCH_SIZE   1
#define CONVOLUTION110_OUTPUT_BIAS_ROWS         10
#define CONVOLUTION110_OUTPUT_BIAS_COLS         10
//#define CONVOLUTION110_OUTPUT_BIAS_FILTERS      DIVIDE(CONVOLUTION110_OUTPUT_FILTERS, CONVOLUTION110_OUTPUT_COARSE_OUT*CONVOLUTION110_OUTPUT_WR_FACTOR)
#define CONVOLUTION110_OUTPUT_BIAS_FILTERS      4

/**
 * FUNCTION DEFINITION
 */

void Convolution110_Output(
    const Convolution110_Output_weight_t weights[CONVOLUTION110_OUTPUT_COARSE_IN*CONVOLUTION110_OUTPUT_COARSE_GROUP][CONVOLUTION110_OUTPUT_COARSE_OUT][DIVIDE(CONVOLUTION110_OUTPUT_WEIGHTS,CONVOLUTION110_OUTPUT_COARSE_IN*CONVOLUTION110_OUTPUT_COARSE_GROUP*CONVOLUTION110_OUTPUT_COARSE_OUT*CONVOLUTION110_OUTPUT_KERNEL_SIZE_X*CONVOLUTION110_OUTPUT_KERNEL_SIZE_Y)][CONVOLUTION110_OUTPUT_KERNEL_SIZE_X][CONVOLUTION110_OUTPUT_KERNEL_SIZE_Y],
#if CONVOLUTION110_OUTPUT_HAS_BIAS == 1
    const Convolution110_Output_biases_t biases[CONVOLUTION110_OUTPUT_COARSE_OUT][CONVOLUTION110_OUTPUT_BIAS_FILTERS],
#endif
    stream_t(Convolution110_Output_input_t)  in[CONVOLUTION110_OUTPUT_COARSE_IN*CONVOLUTION110_OUTPUT_COARSE_GROUP],
    stream_t(Convolution110_Output_output_t) out[CONVOLUTION110_OUTPUT_COARSE_OUT*CONVOLUTION110_OUTPUT_COARSE_GROUP],
    int mode
);

#undef name
#undef NAME
#endif
